{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/utils.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '32386885-8dbf1bc36075d10a6eaf5580b';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst getImagesByQuery = query => {\r\n  return axios('', {\r\n    params: {\r\n      key: API_KEY,\r\n      q: `${query}`,\r\n      image_type: 'photo',\r\n      orientation: 'horizontal',\r\n      safesearch: 'true',\r\n    },\r\n  })\r\n    .then(res => res.data)\r\n    .catch(error => {\r\n      error.message;\r\n      return [];\r\n    });\r\n};\r\nexport default getImagesByQuery;\r\n","export const btnDisabled = on => {\r\n  on.disabled = true;\r\n};\r\n\r\nexport const btnEnabled = off => {\r\n  off.disabled = false;\r\n};\r\n\r\nexport const formReset = active => {\r\n  active.reset();\r\n};\r\n","import SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nlet lightbox = null;\r\n\r\nexport const createGallery = (images, gallery) => {\r\n  const markup = images\r\n    .map(\r\n      ({\r\n        webformatURL,\r\n        largeImageURL,\r\n        tags,\r\n        likes,\r\n        views,\r\n        comments,\r\n        downloads,\r\n      }) => {\r\n        return `\r\n      <li class='gallery-img-item'>\r\n        <a href='${largeImageURL}'>\r\n          <img src=\"${webformatURL}\" alt=\"${tags} \"/>\r\n        </a>\r\n        <div class='gallery-wrapper-text'>\r\n          <p class='gallery-img-text'>Likes <span class='gallery-span'>${likes}</span></p>\r\n          <p class='gallery-img-text'>Views<span class='gallery-span'>${views}</span></p>\r\n          <p class='gallery-img-text'>Comments<span class='gallery-span'>${comments}</span></p>\r\n          <p class='gallery-img-text'>Downloads<span class='gallery-span'>${downloads}</span></p>\r\n        </div>\r\n      </li>\r\n        `;\r\n      }\r\n    )\r\n    .join('');\r\n\r\n  gallery.insertAdjacentHTML('beforeend', markup);\r\n\r\n  if (!lightbox) {\r\n    lightbox = new SimpleLightbox('.gallery a', {\r\n      captionsData: 'alt',\r\n      captionDelay: 250,\r\n    });\r\n  } else {\r\n    lightbox.refresh();\r\n  }\r\n};\r\n\r\nexport const clearGallery = gallery => {\r\n  gallery.innerHTML = '';\r\n};\r\n\r\nexport const showLoader = loader => {\r\n  loader.classList.remove('hidden');\r\n};\r\n\r\nexport const hideLoader = loader => {\r\n  loader.classList.add('hidden');\r\n};\r\n","import iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nimport getImagesByQuery from './js/pixabay-api';\r\nimport { btnDisabled, btnEnabled, formReset } from './js/utils.js';\r\nimport {\r\n  createGallery,\r\n  clearGallery,\r\n  showLoader,\r\n  hideLoader,\r\n} from './js/render-functions';\r\n\r\nconst refs = {\r\n  form: document.querySelector('.form'),\r\n  gallery: document.querySelector('.gallery'),\r\n  loader: document.querySelector('.loader-position'),\r\n  button: document.querySelector('.form-btn'),\r\n};\r\n\r\nrefs.form.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  const query = e.target.elements.search.value.trim();\r\n\r\n  clearGallery(refs.gallery);\r\n\r\n  if (!query) {\r\n    return;\r\n  }\r\n  showLoader(refs.loader);\r\n  btnDisabled(refs.button);\r\n\r\n  getImagesByQuery(query)\r\n    .then(res => {\r\n      if (res.hits.length === 0) {\r\n        iziToast.show({\r\n          position: 'topRight',\r\n          iconUrl: './img/Group (1).svg',\r\n          messageColor: 'rgba(255, 255, 255, 1)',\r\n          color: 'rgba(239, 64, 64, 1)',\r\n          message:\r\n            'Sorry, there are no images matching </br> your search query. Please try again!',\r\n        });\r\n      } else {\r\n        createGallery(res.hits, refs.gallery);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      error.message;\r\n    })\r\n    .finally(() => {\r\n      formReset(refs.form);\r\n      hideLoader(refs.loader);\r\n      btnEnabled(refs.button);\r\n    });\r\n});\r\n"],"names":["API_KEY","axios","getImagesByQuery","query","res","error","btnDisabled","on","btnEnabled","off","formReset","active","lightbox","createGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","showLoader","loader","hideLoader","refs","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCAChBC,EAAM,SAAS,QAAU,2BAEzB,MAAMC,EAAmBC,GAChBF,EAAM,GAAI,CACf,OAAQ,CACN,IAAKD,EACL,EAAG,GAAGG,CAAK,GACX,WAAY,QACZ,YAAa,aACb,WAAY,MAClB,CACA,CAAG,EACE,KAAKC,GAAOA,EAAI,IAAI,EACpB,MAAMC,IACLA,EAAM,QACC,GACR,ECnBQC,EAAcC,GAAM,CAC/BA,EAAG,SAAW,EAChB,EAEaC,EAAaC,GAAO,CAC/BA,EAAI,SAAW,EACjB,EAEaC,EAAYC,GAAU,CACjCA,EAAO,MAAK,CACd,ECPA,IAAIC,EAAW,KAER,MAAMC,EAAgB,CAACC,EAAQC,IAAY,CAChD,MAAMC,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,mBAEIL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,yEAGyBC,CAAK;AAAA,wEACNC,CAAK;AAAA,2EACFC,CAAQ;AAAA,4EACPC,CAAS;AAAA;AAAA;AAAA,SAKrF,EACK,KAAK,EAAE,EAEVR,EAAQ,mBAAmB,YAAaC,CAAM,EAEzCJ,EAMHA,EAAS,QAAO,EALhBA,EAAW,IAAIY,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GACpB,CAAK,CAIL,EAEaC,EAAeV,GAAW,CACrCA,EAAQ,UAAY,EACtB,EAEaW,EAAaC,GAAU,CAClCA,EAAO,UAAU,OAAO,QAAQ,CAClC,EAEaC,EAAaD,GAAU,CAClCA,EAAO,UAAU,IAAI,QAAQ,CAC/B,EC5CME,EAAO,CACX,KAAM,SAAS,cAAc,OAAO,EACpC,QAAS,SAAS,cAAc,UAAU,EAC1C,OAAQ,SAAS,cAAc,kBAAkB,EACjD,OAAQ,SAAS,cAAc,WAAW,CAC5C,EAEAA,EAAK,KAAK,iBAAiB,SAAU,GAAK,CACxC,EAAE,eAAc,EAChB,MAAM1B,EAAQ,EAAE,OAAO,SAAS,OAAO,MAAM,OAE7CsB,EAAaI,EAAK,OAAO,EAEpB1B,IAGLuB,EAAWG,EAAK,MAAM,EACtBvB,EAAYuB,EAAK,MAAM,EAEvB3B,EAAiBC,CAAK,EACnB,KAAKC,GAAO,CACPA,EAAI,KAAK,SAAW,EACtB0B,EAAS,KAAK,CACZ,SAAU,WACV,QAAS,sBACT,aAAc,yBACd,MAAO,uBACP,QACE,gFACZ,CAAS,EAEDjB,EAAcT,EAAI,KAAMyB,EAAK,OAAO,CAExC,CAAC,EACA,MAAMxB,GAAS,CACdA,EAAM,OACR,CAAC,EACA,QAAQ,IAAM,CACbK,EAAUmB,EAAK,IAAI,EACnBD,EAAWC,EAAK,MAAM,EACtBrB,EAAWqB,EAAK,MAAM,CACxB,CAAC,EACL,CAAC"}